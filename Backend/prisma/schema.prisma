// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  id String @id @default(uuid())
  name String
  email String @unique
  password String
  ip String
  createdOn DateTime @default(now())

  devices Devices[] @relation("UserDevices")
  likes Like[] @relation("UserLike")
  tokens Token[] @relation("UserToken")
  notification NotificationState[] @relation("UserNState")
  setting Setting?

  @@map("users")
}

model Devices{
  userId String
  user User @relation("UserDevices", fields: [userId], references: [id])
  deviceId String
  deviceName String

  @@id([userId, deviceId])
}

model Reading{
  id Int @id @default(autoincrement())
  deviceId String
  value Float
  createdOn DateTime @default(now())

  @@map("readings")
}

model Setting{
  userId String @unique
  user User @relation(fields: [userId], references: [id])
  goal Int?

  @@map("settings")
}

model Tip{
  id Int @id @default(autoincrement())
  title String
  description String
  createdOn DateTime @default(now())

  likes Like[] @relation("TipsLike")

  @@map("tips")
}

model Like{
  tipId Int
  tip Tip @relation("TipsLike", fields: [tipId], references: [id])
  userId String
  user User @relation("UserLike", fields: [userId], references: [id])

  @@id([tipId, userId])
}

model Token{
  userId String
  user User @relation("UserToken", fields: [userId], references: [id])
  token String
  createdOn DateTime @default(now())

  @@id([userId, token])
  @@map("tokens")
}

model NotificationState{
  id Int @id @default(autoincrement())
  type String
  userId String
  user User @relation("UserNState", fields: [userId], references: [id])
  createdOn DateTime @default(now())

  @@map("notification_state")
}